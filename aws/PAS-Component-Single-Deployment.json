{
    "Resources": {
        "LogGroup": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/cloudwatch/LogGroup.json"
            }
        },
        "DeployBucket": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/buckets/DeployBucket.json"
            },
            "Condition": "EULACondition"
        },
        "DeployBucketPolicy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "DeployBucket": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "LambdaDeployRole": { "Fn::GetAtt": ["LambdaDeployRole", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/policies/DeployBucketPolicy.json"
            },
            "Condition": "EULACondition"
        },
        "LambdaDeployRole": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/roles/LambdaDeployRole.json"
            },
            "Condition": "EULACondition"
        },
        "StorePasswordLambda": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "LambdaDeployRole": { "Fn::GetAtt": ["LambdaDeployRole", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/lambdas/StorePasswordLambda.json"
            },
            "Condition": "EULACondition"
        },
		"DeletePasswordLambda": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "LambdaDeployRole": { "Fn::GetAtt": ["LambdaDeployRole", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/lambdas/DeletePasswordLambda.json"
            },
            "Condition": "EULACondition"
        },
        "StoreAdminPassword": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "StorePasswordLambda": { "Fn::GetAtt": ["StorePasswordLambda", "Outputs.Arn"] },
                    "BucketId": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "VaultAdminPassword": { "Ref": "VaultAdminPassword" }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/resources/StoreAdminPassword.json"
            },
            "Condition": "EULACondition",
            "DependsOn": [
                "LambdaDeployRole",
                "DeployBucketPolicy",
                "StorePasswordLambda",
                "DeployBucket"
            ]
        },
		"CleanAdminPassword": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "AdminPasswordFileId": { "Fn::GetAtt": ["StoreAdminPassword", "Outputs.FileId"] },
                    "BucketId": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "DeletePasswordLambda": { "Fn::GetAtt": ["DeletePasswordLambda", "Outputs.Arn"] },
                    "DelayerParameter": {
                        "Fn::If": [
                            "CreateCPMCondition", {
                                "Fn::GetAtt": ["CPMMachine", "Outputs.PrivateIp"]
                            }, {
                                "Fn::If": [
                                    "CreatePVWACondition", {
                                        "Fn::GetAtt": ["PVWAMachine", "Outputs.PrivateIp"]
                                    }, {
                                        "Fn::If": [
                                            "CreatePSMCondition", {
                                                "Fn::GetAtt": ["PSMMachine", "Outputs.PrivateIp"]
                                            }, {
                                                "Fn::GetAtt": ["PSMPMachine", "Outputs.PrivateIp"]
                                            }
                                        ]
    
                                    }
                                ]
                            }
                        ]
                    }
                },           
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/resources/CleanAdminPassword.json"
            },
            "Condition": "EULACondition",
            "DependsOn": [
                "LambdaDeployRole",
                "DeployBucketPolicy",
                "StorePasswordLambda",
                "DeployBucket"
            ]
        },
        "InstanceProfile": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/profiles/InstanceProfile.json"
            },
            "Condition": "EULACondition",
            "DeletionPolicy": "Retain"
        },
        "InstanceRole": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "PrincipalForRole": {
                        "Fn::FindInMap": [
                            "Region2Principal",
                            {
                                "Ref": "AWS::Region"
                            },
                            "EC2Principal"
                        ]
                    },
                    "ResourceForPolicy": {
                        "Fn::FindInMap": [
                            "Region2ARNPrefix",
                            { "Ref": "AWS::Region" },
                            "ARNPrefix"
                        ]
                    }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/roles/InstanceRole.json"
            },
            "Condition": "EULACondition"
        },
        "CPMMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "ComponentInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "ComponentInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "ComponentInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Components"
                        ]    
                    },
                    "InstanceType": { "Ref": "ComponentInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/component-single/deploy-component.py.json"
                            }
                        }
                    },
                    "HostName": { "Ref": "ComponentHostName" }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/CPMMachine.json"
            },
            "DependsOn": [
                "StoreAdminPassword"
            ],
            "Condition": "CreateCPMCondition",
            "DeletionPolicy": "Retain"
        },
        "PVWAMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "ComponentInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "ComponentInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "ComponentInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Components"
                        ]    
                    },
                    "InstanceType": { "Ref": "ComponentInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/component-single/deploy-component.py.json"
                            }
                        }
                    },
                    "HostName": { "Ref": "ComponentHostName" }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/PVWAMachine.json"
            },
            "DependsOn": [
                "StoreAdminPassword"
            ],
            "Condition": "CreatePVWACondition",
            "DeletionPolicy": "Retain"
        },
        "PSMMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "ComponentInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "ComponentInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "ComponentInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Components"
                        ]    
                    },
                    "InstanceType": { "Ref": "ComponentInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/component-single/deploy-component.py.json"
                            }
                        }
                    },
                    "HostName": { "Ref": "ComponentHostName" }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/PSMMachine.json"
            },
            "DependsOn": [
                "StoreAdminPassword"
            ],
            "Condition": "CreatePSMCondition",
            "DeletionPolicy": "Retain"
        },
        "PSMPMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "ComponentInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "ComponentInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "ComponentInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "PSMP"
                        ]    
                    },
                    "InstanceType": { "Ref": "ComponentInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt" : [ "LogGroup", "Outputs.Name" ] },
                    "KeyName": { "Ref": "KeyName" },
                    "activatePSMP": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/component-single/activatePSMP.json"
                            }
                        }
                    },
                    "HostName": { "Ref": "ComponentHostName" }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/PSMPMachine.json"
            },
            "DependsOn": [
                "StoreAdminPassword"
            ],
            "Condition": "CreatePSMPCondition",
			"DeletionPolicy": "Retain"
        },
        "ComponentS3DeployBucketPolicy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "DeployBucket": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] },
                    "AdminPasswordFileId": { "Fn::GetAtt": ["StoreAdminPassword", "Outputs.FileId"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/policies/ComponentS3DeployBucketPolicy.json"
            },
            "DependsOn": [
                "StoreAdminPassword",
                "DeployBucket"
            ],
            "Condition": "EULACondition"
        }
    },
    "Parameters": {
        "EULA": {
            "Type": "String",
            "Description": "I have read and agree to the Terms and Conditions.",
            "AllowedValues": [
                "Accept",
                "Decline"
            ],
            "Default": "Decline"
        },
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Select an existing Key Pair from your AWS account.",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "VaultPrivateIP": {
            "Type": "String",
            "Description": "Enter the IP of the Vault instance."
        },
        "DRPrivateIP": {
            "Type": "String",
            "Description": "Enter the IP of the Vault DR instance. (Optional)"
        },
		"VaultAdminUser": {
            "Type": "String",
            "Description": "Enter the Administrator Vault user.",
            "Default": "Administrator",
            "MinLength": 8
        },
        "VaultAdminPassword": {
            "Type": "String",
            "Description": "Enter a password for the Vault Administrator user.",
            "NoEcho": true,
            "MinLength": 8
        },
        "ComponentToInstall": {
            "Type": "String",
            "Description": "Choose the Component to install.",
            "AllowedValues": ["CPM", "PVWA", "PSM","PSMP"],
            "Default": "CPM"
        },
        "ComponentInstanceName": {
            "Type": "String",
            "Description": "Enter a name for the PAS Component instance.",
            "Default": "Components"
        },
		"ComponentHostName": {
            "Type": "String",
            "Description": "Enter the host name for the PAS Component instance."
        },
        "ComponentInstanceType": {
            "Type": "String",
            "Description": "Select the instance type of the Component instance.",
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "m4.large"
        },
        "ComponentInstanceSecurityGroups": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "Assign Security Groups to the Component instance."
        },
        "ComponentInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select the Subnet Id where the Component instance will reside."
        }
    },
    "Conditions": {
        "EULACondition": {
            "Fn::Equals": [
                "Accept",
                {
                    "Ref": "EULA"
                }
            ]
        },
        "CreateCPMCondition" : {
            "Fn::Equals": [
                "CPM",
                {
                    "Ref" : "ComponentToInstall"
                }
           ]
        },
        "CreatePVWACondition" : {
            "Fn::Equals": [
                "PVWA",
                {
                    "Ref" : "ComponentToInstall"
                }
           ]
        },
        "CreatePSMCondition" : {
            "Fn::Equals": [
                "PSM",
                {
                    "Ref" : "ComponentToInstall"
                }
           ]
        },
        "CreatePSMPCondition" : {
            "Fn::Equals": [
                "PSMP",
                {
                    "Ref" : "ComponentToInstall"
                }
           ]
        },
		"DRValueEmpty" : {
			"Fn::Equals": [
				"",
				{
					"Ref" : "DRPrivateIP"
				}
			]
		}
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "General parameters"
                    },
                    "Parameters": [
                        "EULA",
                        "KeyName"
                    ]
                },
                {
                    "Label": {
                        "default": "Vault and DR information"
                    },
                    "Parameters": [
                        "VaultPrivateIP",
                        "DRPrivateIP",
						"VaultAdminUser",
                        "VaultAdminPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Component configuration"
                    },
                    "Parameters": [
                        "ComponentToInstall",
                        "ComponentInstanceName",
						"ComponentHostName",
                        "ComponentInstanceType",
                        "ComponentInstanceSecurityGroups",
                        "ComponentInstanceSubnetId"
                    ]
                }
            ],
            "ParameterLabels": {
                "EULA": {
                    "default": "License Agreement"
                },
                "KeyName": {
                    "default": "Key Pair"
                },
                "VaultPrivateIP": {
                    "default": "Vault Private IP"
                },
                "DRPrivateIP": {
                    "default": "Vault DR Private IP"
                },
				"VaultAdminUser": {
                    "default": "Vault Admin User"
                },
                "VaultAdminPassword": {
                    "default": "Vault Admin Password"
                },
                "ComponentToInstall": {
                    "default": "Component To Install"
                },
                "ComponentInstanceName": {
                    "default": "Component Instance Name"
                },
				"ComponentHostName": {
                    "default": "Component Host Name"
                },
                "ComponentInstanceType": {
                    "default": "Component Instance Type"
                },
                "ComponentInstanceSecurityGroups": {
                    "default": "Component Instance Security Groups"
                },
                "ComponentInstanceSubnetId": {
                    "default": "Component Instance Subnet Id"
                }
            }
        }
    },
    "Mappings": {
        "RegionMap": {
            "Fn::Transform" : {
                "Name" : "AWS::Include",
                "Parameters" : {
                    "Location" : "s3://avishay/includes/mappings/RegionMap.json"
                 }
             }    
        },
        "Region2ARNPrefix": {
            "Fn::Transform" : {
                "Name" : "AWS::Include",
                "Parameters" : {
                    "Location" : "s3://avishay/includes/mappings/Region2ARNPrefix.json"
                }
            }
        },
        "Region2Principal":{
            "Fn::Transform" : {
                "Name" : "AWS::Include",
                "Parameters" : {
                    "Location" : "s3://avishay/includes/mappings/Region2Principal.json"
                }
            }
        }
    },
    "Outputs": {
        "CloudWatchLogGroupName": {
            "Description": "The name of the CloudWatch log group",
            "Value": {
                "Fn::GetAtt" : [ "LogGroup", "Outputs.Name" ]
            }
        }
    }
}

