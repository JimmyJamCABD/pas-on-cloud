{
    "Resources": {
        "LogGroup": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/cloudwatch/LogGroup.json"
            }
        },
        "DeployBucket": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/buckets/DeployBucket.json"
            },
            "Condition": "EULACondition"
        },
        "DeployBucketPolicy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "DeployBucket": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "LambdaDeployRole": { "Fn::GetAtt": ["LambdaDeployRole", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/policies/DeployBucketPolicy.json"
            },
            "Condition": "EULACondition"
        },
        "LambdaDeployRole": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/roles/LambdaDeployRole.json"
            },
            "Condition": "EULACondition"
        },
        "StorePasswordLambda": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "LambdaDeployRole": { "Fn::GetAtt": ["LambdaDeployRole", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/lambdas/StorePasswordLambda.json"
            },
            "Condition": "EULACondition"
        },
		"DeletePasswordLambda": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "LambdaDeployRole": { "Fn::GetAtt": ["LambdaDeployRole", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/lambdas/DeletePasswordLambda.json"
            },
            "Condition": "EULACondition"
        },
        "StoreMasterPassword": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "StorePasswordLambda": { "Fn::GetAtt": ["StorePasswordLambda", "Outputs.Arn"] },
                    "BucketId": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "VaultMasterPassword": { "Ref": "VaultMasterPassword" }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/resources/StoreMasterPassword.json"
            },
            "Condition": "EULACondition",
            "DependsOn": [
                "LambdaDeployRole",
                "DeployBucketPolicy",
                "StorePasswordLambda",
                "DeployBucket"
            ]
        },
        "StoreAdminPassword": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "StorePasswordLambda": { "Fn::GetAtt": ["StorePasswordLambda", "Outputs.Arn"] },
                    "BucketId": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "VaultAdminPassword": { "Ref": "VaultAdminPassword" }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/resources/StoreAdminPassword.json"
            },
            "Condition": "EULACondition",
            "DependsOn": [
                "LambdaDeployRole",
                "DeployBucketPolicy",
                "StorePasswordLambda",
                "DeployBucket"
            ]
        },
        "CleanMasterPassword": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "MasterPasswordFileId": { "Fn::GetAtt": ["StoreMasterPassword", "Outputs.FileId"] },
                    "BucketId": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "DeletePasswordLambda": { "Fn::GetAtt": ["DeletePasswordLambda", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/resources/CleanMasterPassword.json"
            },
            "Condition": "EULACondition",
            "DependsOn": [
                "LambdaDeployRole",
                "DeployBucketPolicy",
                "StorePasswordLambda",
                "DeployBucket",
				"VaultDRMachine"
            ]
        },
		"CleanDRPassword": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "DRPasswordFileId": { "Fn::GetAtt": ["StoreDRPassword", "Outputs.FileId"] },
                    "BucketId": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "DeletePasswordLambda": { "Fn::GetAtt": ["DeletePasswordLambda", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/resources/CleanDRPassword.json"
            },
            "Condition": "EULACondition",
            "DependsOn": [
                "LambdaDeployRole",
                "DeployBucketPolicy",
                "StorePasswordLambda",
                "DeployBucket",
				"VaultDRMachine"
            ]
        },
        "VaultMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "VaultInstanceName": { "Ref": "VaultInstanceName" },
                    "VaultInstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "VaultInstanceSecurityGroups" }
                        ]
                    },
                    "VaultInstanceSubnetId": { "Ref": "VaultInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Vault"
                        ]    
                    },
                    "VaultInstanceType": { "Ref": "VaultInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/full-pas/deploy-vault.py.json"
                            }
                        }
                    },
                    "VaultHostName": "cyberark-vault"
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/VaultMachine.json"
            },
            "DependsOn": [
                "StoreMasterPassword",
                "StoreAdminPassword",
                "StoreDRPassword"
            ],
            "DeletionPolicy": "Retain"
        },
		"VaultDRMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "VaultInstanceName": { "Ref": "VaultInstanceName" },
                    "VaultInstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "VaultInstanceSecurityGroups" }
                        ]
                    },
                    "DRInstanceSubnetId": { "Ref": "DRInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Vault"
                        ]    
                    },
                    "VaultInstanceType": { "Ref": "VaultInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/full-pas/deploy-vaultdr.py.json"
                            }
                        }
                    },
                    "VaultHostName": "cyberark-vault-dr"
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/VaultDRMachine.json"
            },
            "DependsOn": [
                "VaultMachine"
            ],
            "Condition": "",
            "DeletionPolicy": "Retain"
        },
        "StoreDRPassword": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "VaultDRPassword": { "Ref": "VaultDRPassword" },
                    "BucketId": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "StorePasswordLambda": { "Fn::GetAtt": ["StorePasswordLambda", "Outputs.Arn"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/resources/StoreDRPassword.json"
            },
            "Condition": "EULACondition",
            "DependsOn": [
                "LambdaDeployRole",
                "DeployBucketPolicy",
                "StorePasswordLambda",
                "DeployBucket"
            ]
        },
        "InstanceProfile": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/profiles/InstanceProfile.json"
            },
            "Condition": "EULACondition",
            "DeletionPolicy": "Retain"
        },
        "CPMMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "CPMInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "CPMInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "CPMInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Components"
                        ]    
                    },
                    "InstanceType": { "Ref": "CPMInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/full-pas/deploy-component.py.json"
                            }
                        }
                    },
                    "HostName": "cpm-machine"
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/CPMMachine.json"
            },
            "DependsOn": [
                "VaultDRMachine"
            ],
            "Condition": "",
            "DeletionPolicy": "Retain"
        },
        "PVWAMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "PVWAInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "PVWAInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "PVWAInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Components"
                        ]    
                    },
                    "InstanceType": { "Ref": "PVWAInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/full-pas/deploy-component.py.json"
                            }
                        }
                    },
                    "HostName": "pvwa-machine"
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/PVWAMachine.json"
            },
            "DependsOn": [
                "CPMMachine"
            ],
            "DeletionPolicy": "Retain"
        },
        "PSMMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "PSMInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "PSMInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "PSMInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "Components"
                        ]    
                    },
                    "InstanceType": { "Ref": "PSMInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt": ["LogGroup", "Outputs.Name"] },
                    "KeyName": { "Ref": "KeyName" },
                    "AWSEC2WindowsCloudWatchJSON": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/shared/AWS.EC2.Windows.CloudWatch.json"
                            }
                        }
                    },
                    "DeployPy": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/full-pas/deploy-component.py.json"
                            }
                        }
                    },
                    "HostName": "psm-machine"
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/PSMMachine.json"
            },
            "DependsOn": [
                "PVWAMachine"
            ],
            "DeletionPolicy": "Retain"
        },
        "PSMPMachine": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceName": { "Ref": "PSMPInstanceName" },
                    "InstanceSecurityGroups": {
                        "Fn::Join": [
                            ",",
                            { "Ref": "PSMPInstanceSecurityGroups" }
                        ]
                    },
                    "InstanceSubnetId": { "Ref": "PSMPInstanceSubnetId" },
                    "ImageId": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            { "Ref": "AWS::Region" },
                            "PSMP"
                        ]    
                    },
                    "InstanceType": { "Ref": "PSMPInstanceType" },
                    "InstanceProfile": { "Fn::GetAtt": ["InstanceProfile", "Outputs.Name"] },
                    "LogGroup": { "Fn::GetAtt" : [ "LogGroup", "Outputs.Name" ] },
                    "KeyName": { "Ref": "KeyName" },
                    "activatePSMP": {
                        "Fn::Transform" : {
                            "Name" : "AWS::Include",
                            "Parameters" : {
                                "Location" : "s3://avishay/includes/files/full-pas/activatePSMP.json"
                            }
                        }
                    },
                    "HostName": "psmp-machine"
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/machines/PSMPMachine.json"
            },
            "DependsOn": [
                "PSMMachine"
            ],
            "Condition": "",
			"DeletionPolicy": "Retain"
        },
        "InstanceRole": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "PrincipalForRole": {
                        "Fn::FindInMap": [
                            "Region2Principal",
                            {
                                "Ref": "AWS::Region"
                            },
                            "EC2Principal"
                        ]
                    },
                    "ResourceForPolicy": {
                        "Fn::FindInMap": [
                            "Region2ARNPrefix",
                            { "Ref": "AWS::Region" },
                            "ARNPrefix"
                        ]
                    }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/roles/InstanceRole.json"
            },
            "Condition": "EULACondition",
            "DeletionPolicy": "Retain"
        },
        "VaultInstancesKMSPolicy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/policies/VaultInstancesKMSPolicy.json"
            },
            "Condition": "EULACondition",
            "DeletionPolicy": "Retain"
        },
        "VaultInstancesS3VaultFilesBucketPolicy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "VaultFilesBucket": { "Ref": "VaultFilesBucket" },
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/policies/VaultInstancesS3VaultFilesBucketPolicy.json"
            },
            "Condition": "EULACondition"
        },
        "VaultInstancesS3DeployBucketPolicy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "DeployBucket": { "Fn::GetAtt": ["DeployBucket", "Outputs.Id"] },
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/policies/VaultInstancesS3DeployBucketPolicy.json"
            },
            "Condition": "EULACondition"
        },
        "VaultBootstrapKMSPolicy": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "InstanceRole": { "Fn::GetAtt": ["InstanceRole", "Outputs.Name"] }
                },
                "TemplateURL": "https://s3-eu-west-2.amazonaws.com/pas-on-cloud/includes/policies/VaultBootstrapKMSPolicy.json"
            }
        }
    },
    "Parameters": {
        "EULA": {
            "Type": "String",
            "Description": "I have read and agree to the Terms and Conditions.",
            "AllowedValues": [
                "Accept",
                "Decline"
            ],
            "Default": "Decline"
        },
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Select an existing Key Pair from your AWS account.",
            "ConstraintDescription": "Can contain only ASCII characters."
        },
        "VaultFilesBucket": {
            "Type": "String",
            "Description": "Enter the name of the bucket containing the license and recovery public key."
        },
        "LicenseFile": {
            "Type": "String",
            "Description": "Enter the path of the license file within the bucket.",
            "Default": "license.xml"
        },
        "RecoveryPublicKey": {
            "Type": "String",
            "Description": "Enter the path of the recovery public key file within the bucket.",
            "Default": "recpub.key"
        },
        "VaultInstanceName": {
            "Type": "String",
            "Description": "Enter a name for the Vault instance.",
            "Default": "CyberArk Vault"
        },
        "VaultMasterPassword": {
            "Type": "String",
            "Description": "Enter a password for the Vault Master user.",
            "NoEcho": true,
            "MinLength": 8,
            "AllowedPattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[~!@#$%^&\\*\\(\\)_\\-+=:])(?=\\S+$).{8,}$",
            "ConstraintDescription": "Vault Master password must contain at least 1 lowercase letter, 1 uppercase letter, 1 digit and 1 special character"
        },
	"RetypeMasterPassword": {
            "Type": "String",
            "Description": "Retype the password for the Vault Master user.",
            "NoEcho": true,
            "MinLength": 8
        },
        "VaultAdminPassword": {
            "Type": "String",
            "Description": "Enter a password for the Vault Administrator user.",
            "NoEcho": true,
	    "MinLength": 8,
	    "AllowedPattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[~!@#$%^&\\*\\(\\)_\\-+=:])(?=\\S+$).{8,}$",
	    "ConstraintDescription": "Vault Administrator password must contain at least 1 lowercase letter, 1 uppercase letter, 1 digit and 1 special character"
        },
	"RetypeAdminPassword": {
            "Type": "String",
            "Description": "Retype the password for the Vault Administrator user.",
            "NoEcho": true,
            "MinLength": 8
        },
	"VaultDRPassword": {
            "Type": "String",
            "Description": "Enter a password for the Vault DR user.",
            "NoEcho": true,
            "MinLength": 8,
	    "AllowedPattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[~!@#$%^&\\*\\(\\)_\\-+=:])(?=\\S+$).{8,}$",
	    "ConstraintDescription": "Vault DR password must contain at least 1 lowercase letter, 1 uppercase letter, 1 digit and 1 special character"
        },
	"RetypeDRPassword": {
            "Type": "String",
            "Description": "Retype the password for the Vault DR user.",
            "NoEcho": true,
            "MinLength": 8
        },
        "VaultInstanceType": {
            "Type": "String",
            "Description": "Select the instance type of the Vault instance.",
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "m4.large"
        },
        "VaultInstanceSecurityGroups": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "Assign Security Groups to the Vault and Vault DR instances."
        },
        "VaultInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select the Subnet Id where the Vault instance will reside."
        },
        "DRInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select the Subnet Id where the Vault DR instance will reside."
        },
        "CPMInstanceName": {
            "Type": "String",
            "Description": "Enter a name for the CPM instance.",
            "Default": "CyberArk CPM"
        },
        "CPMInstanceType": {
            "Type": "String",
            "Description": "Select the instance type of the CPM instance.",
            "AllowedValues": [
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge"
            ],
            "Default": "c4.large"
        },
        "CPMInstanceSecurityGroups": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "Assign Security Groups to the CPM instance."
        },
        "CPMInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select the Subnet Id where the CPM instance will reside."
        },
        "PVWAInstanceName": {
            "Type": "String",
            "Description": "Enter a name for the PVWA instance.",
            "Default": "CyberArk PVWA"
        },
        "PVWAInstanceType": {
            "Type": "String",
            "Description": "Select the instance type of the PVWA instance.",
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge"
            ],
            "Default": "t2.medium"
        },
        "PVWAInstanceSecurityGroups": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "Assign Security Groups to the PVWA instance."
        },
        "PVWAInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select the Subnet Id where the PVWA instance will reside."
        },
        "PSMInstanceName": {
            "Type": "String",
            "Description": "Enter a name for the PSM instance.",
            "Default": "CyberArk PSM"
        },
        "PSMInstanceType": {
            "Type": "String",
            "Description": "Select the instance type of the PSM instance.",
            "AllowedValues": [
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge"
            ],
            "Default": "c4.2xlarge"
        },
        "PSMInstanceSecurityGroups": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "Assign Security Groups to the PSM instance."
        },
		"PSMInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select the Subnet Id where the PSM instance will reside."
        },
		"PSMPInstanceName": {
            "Type": "String",
            "Description": "Enter a name for the PSM SSH Proxy instance.",
            "Default": "CyberArk PSM SSH Proxy"
        },
		"PSMPInstanceType": {
            "Type": "String",
            "Description": "Select the instance type of the PSM SSH Proxy instance.",
            "AllowedValues": [
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "m4.large"
        },
		"PSMPInstanceSecurityGroups": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "Assign Security Groups to the PSM SSH Proxy instance."
        },
		"PSMPInstanceSubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select the Subnet Id where the PSM SSH Proxy instance will reside."
        }
    },
    "Conditions": {
        "EULACondition": {
            "Fn::Equals": [
                "Accept",
                {
                    "Ref": "EULA"
                }
            ]
        }
    },
    "Rules": {
        "PasswordConfirmation": {
            "Assertions": [
              {
                "Assert" : {"Fn::Equals": [{"Ref": "VaultMasterPassword"}, {"Ref": "RetypeMasterPassword"}]},
                "AssertDescription": "The password confirmation does not match."
              },
			  {
                "Assert" : {"Fn::Equals": [{"Ref": "VaultAdminPassword"}, {"Ref": "RetypeAdminPassword"}]},
                "AssertDescription": "The password confirmation does not match."
              },
			  {
                "Assert" : {"Fn::Equals": [{"Ref": "VaultDRPassword"}, {"Ref": "RetypeDRPassword"}]},
                "AssertDescription": "The password confirmation does not match."
              }
            ] 
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "General parameters"
                    },
                    "Parameters": [
                        "EULA",
                        "KeyName",
                        "VaultFilesBucket",
                        "LicenseFile",
                        "RecoveryPublicKey"
                    ]
                },
                {
                    "Label": {
                        "default": "Vault and Vault DR configuration"
                    },
                    "Parameters": [
                        "VaultInstanceName",
                        "VaultMasterPassword",
						"RetypeMasterPassword",					   
                        "VaultAdminPassword",
						"RetypeAdminPassword",
						"VaultDRPassword",
						"RetypeDRPassword",
                        "VaultInstanceType",
                        "VaultInstanceSecurityGroups",
                        "VaultInstanceSubnetId",
                        "DRInstanceSubnetId"
                    ]
                },
                {
                    "Label": {
                        "default": "CPM configuration"
                    },
                    "Parameters": [
                        "CPMInstanceName",
                        "CPMInstanceType",
                        "CPMInstanceSecurityGroups",
                        "CPMInstanceSubnetId"
                    ]
                },
                {
                    "Label": {
                        "default": "PVWA configuration"
                    },
                    "Parameters": [
                        "PVWAInstanceName",
                        "PVWAInstanceType",
                        "PVWAInstanceSecurityGroups",
                        "PVWAInstanceSubnetId"
                    ]
                },
                {
                    "Label": {
                        "default": "PSM configuration"
                    },
                    "Parameters": [
                        "PSMInstanceName",
                        "PSMInstanceType",
                        "PSMInstanceSecurityGroups",
						"PSMInstanceSubnetId"
                    ]
                },
				{
                    "Label": {
                        "default": "PSM SSH Proxy configuration"
                    },
                    "Parameters": [
                        "PSMPInstanceName",
                        "PSMPInstanceType",
                        "PSMPInstanceSecurityGroups",
						"PSMPInstanceSubnetId"
                    ]
                }
            ],
            "ParameterLabels": {
                "EULA": {
                    "default": "License Agreement"
                },
                "KeyName": {
                    "default": "Key Pair"
                },
                "VaultFilesBucket": {
                    "default": "Vault Files Bucket"
                },
                "LicenseFile": {
                    "default": "License File"
                },
                "RecoveryPublicKey": {
                    "default": "Recovery Public Key"
                },
                "VaultInstanceName": {
                    "default": "Vault Instance Name"
                },
                "VaultMasterPassword": {
                    "default": "Vault Master Password"
                },
				"RetypeMasterPassword": {
                    "default": "Retype Master Password"
                },
                "VaultAdminPassword": {
                    "default": "Vault Admin Password"
				},
				"RetypeAdminPassword": {
                    "default": "Retype Admin Password"
                },
				"VaultDRPassword": {
                    "default": "DR Password"
                },
				"RetypeDRPassword": {
                    "default": "Retype DR Password"
                },
                "VaultInstanceType": {
                    "default": "Vault and Vault DR Instance Type"
                },
                "VaultInstanceSecurityGroups": {
                    "default": "Vault Security Groups"
                },
                "VaultInstanceSubnetId": {
                    "default": "Vault Instance Subnet Id"
                },
                "DRInstanceSubnetId": {
                    "default": "Vault DR Instance Subnet Id"
                },
                "CPMInstanceName": {
                    "default": "CPM Instance Name"
                },
                "CPMInstanceType": {
                    "default": "CPM Instance Type"
                },
                "CPMInstanceSecurityGroups": {
                    "default": "CPM Instance Security Groups"
                },
                "CPMInstanceSubnetId": {
                    "default": "CPM Instance Subnet Id"
                },
                "PVWAInstanceName": {
                    "default": "PVWA Instance Name"
                },
                "PVWAInstanceType": {
                    "default": "PVWA Instance Type"
                },
                "PVWAInstanceSecurityGroups": {
                    "default": "PVWA Instance Security Groups"
                },
                "PVWAInstanceSubnetId": {
                    "default": "PVWA Instance Subnet Id"
                },
                "PSMInstanceName": {
                    "default": "PSM Instance Name"
                },
                "PSMInstanceType": {
                    "default": "PSM Instance Type"
                },
                "PSMInstanceSecurityGroups": {
                    "default": "PSM Instance Security Groups"
                },
				"PSMInstanceSubnetId": {
                    "default": "PSM Instance Subnet Id"
                },
				"PSMPInstanceName": {
                    "default": "PSM SSH Proxy Instance Name"
                },
				"PSMPInstanceType": {
                    "default": "PSM SSH Proxy Instance Type"
                },
				"PSMPInstanceSecurityGroups": {
                    "default": "PSM SSH Proxy Instance Security Groups"
                },
				"PSMPInstanceSubnetId": {
                    "default": "PSM SSH Proxy Instance Subnet Id"
                }
            }
        }
    },
    "Mappings": {
        "RegionMap": {
            "Fn::Transform" : {
                "Name" : "AWS::Include",
                "Parameters" : {
                    "Location" : "s3://avishay/includes/mappings/RegionMap.json"
                 }
             }    
        },
        "Region2ARNPrefix": {
            "Fn::Transform" : {
                "Name" : "AWS::Include",
                "Parameters" : {
                    "Location" : "s3://avishay/includes/mappings/Region2ARNPrefix.json"
                }
            }
        },
        "Region2Principal":{
            "Fn::Transform" : {
                "Name" : "AWS::Include",
                "Parameters" : {
                    "Location" : "s3://avishay/includes/mappings/Region2Principal.json"
                }
            }
        }
    }
}

